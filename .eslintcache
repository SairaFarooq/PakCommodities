[{"F:\\REACT\\pak-commodities\\src\\index.js":"1","F:\\REACT\\pak-commodities\\src\\App.js":"2","F:\\REACT\\pak-commodities\\src\\components\\Layout\\Header\\Header.js":"3","F:\\REACT\\pak-commodities\\src\\components\\Layout\\Navbar\\Navbar.js":"4","F:\\REACT\\pak-commodities\\src\\components\\Layout\\Footer\\Footer.js":"5","F:\\REACT\\pak-commodities\\src\\components\\Home\\Home.js":"6","F:\\REACT\\pak-commodities\\src\\components\\Auth\\SignIn.js":"7","F:\\REACT\\pak-commodities\\src\\components\\Auth\\SignUp.js":"8","F:\\REACT\\pak-commodities\\src\\components\\Posts\\RecentPosts.js":"9","F:\\REACT\\pak-commodities\\src\\components\\Dashboard\\Dashboard.js":"10","F:\\REACT\\pak-commodities\\src\\components\\Layout\\Sidebar\\Sidebar.js":"11","F:\\REACT\\pak-commodities\\src\\components\\Dashboard\\AddLocation.js":"12","F:\\REACT\\pak-commodities\\src\\components\\Dashboard\\AddRate.js":"13","F:\\REACT\\pak-commodities\\src\\components\\Dashboard\\AddBlog.js":"14","F:\\REACT\\pak-commodities\\src\\components\\Home\\HistoricalRates.js":"15","F:\\REACT\\pak-commodities\\src\\services\\location.service.js":"16","F:\\REACT\\pak-commodities\\src\\components\\Dashboard\\AddProduct.js":"17","F:\\REACT\\pak-commodities\\src\\components\\Dashboard\\AddCategory.js":"18","F:\\REACT\\pak-commodities\\src\\services\\category.service.js":"19","F:\\REACT\\pak-commodities\\src\\services\\product.service.js":"20","F:\\REACT\\pak-commodities\\src\\context\\ThemeContext.js":"21","F:\\REACT\\pak-commodities\\src\\services\\rates.service.js":"22","F:\\REACT\\pak-commodities\\src\\components\\Others\\TermsOfService.js":"23","F:\\REACT\\pak-commodities\\src\\components\\Others\\NewsRoom.js":"24","F:\\REACT\\pak-commodities\\src\\components\\Dashboard\\Users.js":"25","F:\\REACT\\pak-commodities\\src\\services\\user.service.js":"26","F:\\REACT\\pak-commodities\\src\\components\\Dashboard\\AddPlan.js":"27","F:\\REACT\\pak-commodities\\src\\services\\plan.service.js":"28","F:\\REACT\\pak-commodities\\src\\components\\Dashboard\\Notifications.js":"29"},{"size":221,"mtime":1612539304729,"results":"30","hashOfConfig":"31"},{"size":2551,"mtime":1613070694879,"results":"32","hashOfConfig":"31"},{"size":1506,"mtime":1612688406697,"results":"33","hashOfConfig":"31"},{"size":6009,"mtime":1613461961396,"results":"34","hashOfConfig":"31"},{"size":2182,"mtime":1612606765420,"results":"35","hashOfConfig":"31"},{"size":10947,"mtime":1613456222157,"results":"36","hashOfConfig":"31"},{"size":2499,"mtime":1613126585750,"results":"37","hashOfConfig":"31"},{"size":5411,"mtime":1613135992698,"results":"38","hashOfConfig":"31"},{"size":408,"mtime":1611676170000,"results":"39","hashOfConfig":"31"},{"size":12121,"mtime":1613134167822,"results":"40","hashOfConfig":"31"},{"size":2285,"mtime":1613134006337,"results":"41","hashOfConfig":"31"},{"size":5989,"mtime":1612696693812,"results":"42","hashOfConfig":"31"},{"size":5528,"mtime":1613454523359,"results":"43","hashOfConfig":"31"},{"size":7217,"mtime":1612682284612,"results":"44","hashOfConfig":"31"},{"size":7944,"mtime":1612687430077,"results":"45","hashOfConfig":"31"},{"size":420,"mtime":1613126068317,"results":"46","hashOfConfig":"31"},{"size":8006,"mtime":1613133059301,"results":"47","hashOfConfig":"31"},{"size":5530,"mtime":1613136419544,"results":"48","hashOfConfig":"31"},{"size":385,"mtime":1613128209277,"results":"49","hashOfConfig":"31"},{"size":429,"mtime":1613126084677,"results":"50","hashOfConfig":"31"},{"size":526,"mtime":1612541616952,"results":"51","hashOfConfig":"31"},{"size":531,"mtime":1613137548405,"results":"52","hashOfConfig":"31"},{"size":1189,"mtime":1612606872075,"results":"53","hashOfConfig":"31"},{"size":287,"mtime":1612688469540,"results":"54","hashOfConfig":"31"},{"size":7964,"mtime":1613133815986,"results":"55","hashOfConfig":"31"},{"size":945,"mtime":1613126090958,"results":"56","hashOfConfig":"31"},{"size":7082,"mtime":1613127095952,"results":"57","hashOfConfig":"31"},{"size":372,"mtime":1613126076277,"results":"58","hashOfConfig":"31"},{"size":566,"mtime":1613133901771,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1e2cgqn",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"62"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"F:\\REACT\\pak-commodities\\src\\index.js",[],["131","132"],"F:\\REACT\\pak-commodities\\src\\App.js",[],"F:\\REACT\\pak-commodities\\src\\components\\Layout\\Header\\Header.js",["133","134","135"],"// Header : top of the page\nimport logopc from '../../../logopc.PNG';\nimport logo2 from '../../../assets/logo2.png';\nimport './Header.css';\nimport {NavLink, Link} from 'react-router-dom';\n\n\nfunction toggleTheme() {\n    console.log('Theme toggle clicked')\n}\n\nconst Header = () =>{\n    return(\n        \n        <nav className=\"nav-wrapper grey lighten-5 topnav\">\n            <div className=\"container\">\n\n            <a href=\"/\"><img className=\"logo\" src={logo2} alt=\"LOGO\"/></a>\n\n               {/* <Link to=\"/\" className=\"brand-logo\">PAK COMMODITIES <br/> <div class=\"sub-heading\">FASTEST NEWS UPDATES OF COMMODITIES IN PAKISTAN </div></Link> */}\n                \n                <ul className=\"right\">\n                    {/* <li><i class=\"large material-icons\"><a className=\"lightTheme\" href=\"#\" onClick={toggleTheme}>brightness_4</a></i></li> */}\n                    <li><NavLink to=\"/blog\" className=\"uppernav\">BLOG</NavLink></li>\n                    <li><NavLink to=\"/newsRoom\" className=\"uppernav\">NEWSROOM</NavLink></li>\n                    <li><NavLink to=\"/signin\" className=\"uppernav\">LOGIN</NavLink></li>\n                    <li><NavLink to=\"/logout\" className=\"uppernav\">LOGOUT</NavLink></li>\n                    <li><NavLink to=\"/signup\" className=\"uppernav\">SIGNUP</NavLink></li>\n                    <li><NavLink to=\"/dashboard\" className=\"uppernav\">DASHBOARD</NavLink></li>\n                </ul>\n               \n            </div>\n        </nav>\n        \n\n    \n    )\n\n}\n\nexport default Header","F:\\REACT\\pak-commodities\\src\\components\\Layout\\Navbar\\Navbar.js",["136"],"F:\\REACT\\pak-commodities\\src\\components\\Layout\\Footer\\Footer.js",["137","138","139","140","141","142","143","144","145"],"import './Footer.css';\nimport facebook from '../../../assets/facebook.png';\nimport twitter from '../../../assets/twitter.png';\nimport google from '../../../assets/google.png';\nimport apple from '../../../assets/apple.png';\n\n\nconst Footer = () =>{\n  \n    return(\n\n        <footer className=\"page-footer grey darken-2\">\n          <div className=\"container\">\n            <div className=\"row\">\n              \n              <div className=\"col l4 s12\">\n                <h5 className=\"footerheadings\"><b>CONTACT US</b></h5>\n                <ul>\n                  <li ><b>TELEPHONE : </b>+92 301 5247927</li>\n                  <li ><b>EMAIL : </b>pakcommodities92@mail.com</li>\n                </ul>\n                \n              </div>\n\n              <div className=\"col l6 s12\">\n                <h1></h1>\n                <ul className=\"col l4\">\n                  <li><a className=\"footer-subLinks\" href=\"/termsOfService\">TERMS OF SERVICES</a></li>\n                  <li><a className=\"footer-subLinks\" href=\"#!\">RESEARCH</a></li>\n                </ul>\n\n                <a className=\"footer-logo\" href=\"https://play.google.com/store/apps/details?id=apppakcommoditiescom.wpapp\" target=\"_blank\"><img className=\"app-icon\" src={google}/></a>\n                <a className=\"footer-logo\" href=\"https://apps.apple.com/pk/app/pakcommodities/id1513414534\" target=\"_blank\"><img className=\"app-icon\" src={apple}/></a>\n              \n              </div>\n\n      \n              <div className=\"col l2 s12 \">\n                <h5 className=\"footerheadings\"><b>FOLLOW US</b></h5>\n                <a className=\"footer-logo\" href=\"https://web.facebook.com/PAKCOMMARKET\" target=\"_blank\"><img className=\"social-icon\" src={facebook}/></a>\n                <a className=\"footer-logo\" href=\"https://twitter.com/pakcommodities1\" target=\"_blank\"><img className=\"social-icon\" src={twitter}/></a>\n              </div>\n\n            </div>\n          </div>\n          <div className=\"footer-copyright\">\n            <div className=\"container\">\n            Made with ♥ in Pakistan © 2021. All rights reserved.\n            \n            </div>\n          </div>\n        </footer>\n        \n    )\n}\n\nexport default Footer\n\n\n","F:\\REACT\\pak-commodities\\src\\components\\Home\\Home.js",["146","147","148","149","150"],"F:\\REACT\\pak-commodities\\src\\components\\Auth\\SignIn.js",["151"],"import {Component} from 'react';\nimport './SignIn.css';\nimport {loginUser} from '../../services/user.service';\n\nclass SignIn extends Component{\n\n    state={\n        username : '',\n        password : ''\n\n    }\n\n    handleChange =(e)=>{\n        this.setState({\n            [e.target.id] : e.target.value\n        });\n    }\n\n    handleSignIn = async (e) =>{\n        {/* submit the data to API */}\n        e.preventDefault();\n\n        var user = {\n            username : this.state.username,\n            password : this.state.password,\n            phoneNumber : 123,\n            email :' this.state.email',\n            subscribedPlan: {plan : 'this.state.subscriptionPlan'},\n            transactionId : 'this.state.transactionId',\n            startDate : new Date(),\n            endDate : new Date(),\n            status : 'inactive'\n        }\n        console.log(\"FROM SUBMIT\", loginUser);\n\n        //saving data in mongo\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json',\n                        'Accept': 'application/json' },\n            body: JSON.stringify(user)\n        };\n        const response = await loginUser(requestOptions);\n        const res = await response.json();\n        console.log(\"response after login\", res);\n\n    }\n\n    render(){\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                </div>\n\n                <div className=\"row\">\n\n                <form onSubmit={this.handleSignIn} className=\"grey lighten-1 col l4 offset-l4 s12 formstyle\">\n                    <h5 className=\"grey-text text-darken-3 center\"><b>SIGNIN</b></h5>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"username\" className=\"black-text\">Username : </label>\n                        <input type=\"text\" id =\"username\" required onChange={this.handleChange}/>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\" className=\"black-text\">Password : </label>\n                        <input type=\"password\" id =\"password\" required onChange={this.handleChange}/>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <button className=\"btn teal accent-4 z-depth-0 \">LOGIN</button>\n                    </div>\n\n                </form>\n                </div>               \n            </div>\n        )\n    }\n}\n\nexport default SignIn","F:\\REACT\\pak-commodities\\src\\components\\Auth\\SignUp.js",["152","153"],"import {Component} from 'react';\nimport './SignIn.css';\nimport {RecentPosts} from '../Posts/RecentPosts';\nimport { addUser } from '../../services/user.service';\n\nclass SignUp extends Component{\n\n    state={\n\n        name :'',\n        email :'',\n        phoneNumber :'',\n        password :'',\n        subscriptionPlan :'',\n        transactionId : '',\n        startDate : '',\n        endDate: '',\n        status : 'pending'\n\n    }\n\n    handleChange =(e)=>{\n        this.setState({\n            [e.target.id] : e.target.value\n        });\n    }\n\n    handleSignUp = async(e) =>{\n        e.preventDefault();\n\n        // Calculate the endDate basis the subscription plan\n        var StartDate = new Date();\n        var subplan = parseInt(this.state.subscriptionPlan);\n        var EndDate = new Date (StartDate.setMonth(StartDate.getMonth() + subplan));\n        console.log(\"End date is ===\", EndDate);\n\n        {/* submit the data to API */}\n        var user = {\n            name : this.state.name,\n            password : this.state.password,\n            phoneNumber : this.state.phoneNumber,\n            email : this.state.email,\n            subscribedPlan: {plan : this.state.subscriptionPlan},\n            transactionId : this.state.transactionId,\n            startDate : new Date(),\n            endDate : EndDate,\n            status : this.state.status\n        }\n        console.log(\"FROM SUBMIT\", user);\n\n        //saving data in mongo\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json',\n                        'Accept': 'application/json' },\n            body: JSON.stringify(user)\n        };\n        const response = await addUser(requestOptions);\n        const res = await response.json();\n        console.log(\"response after addUser\", res);\n\n\n    }\n\n    render(){\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                </div>\n                \n                <div className=\"row\">\n\n                <form onSubmit={this.handleSignUp} className=\"grey lighten-1 col l4 offset-l1 s12 formstyle\">\n                    <h5 className=\"grey-text text-darken-3 center\"><b>SIGNUP</b></h5>\n                    \n                    {/* name */}\n                    <div className=\"input-field\">\n                        <label htmlFor=\"name\" className=\"black-text\" >Name : </label>\n                        <input type=\"text\" id =\"name\" required onChange={this.handleChange}/>\n                    </div>\n                    \n                    {/* email */}\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\" className=\"black-text\">Email : </label>\n                        <input type=\"email\" id =\"email\" required  onChange={this.handleChange}/>\n                    </div>\n                    \n                    {/* Phone Number */}\n                    <div className=\"input-field\">\n                        <label htmlFor=\"phoneNumber\" className=\"black-text\">Phone Number: </label>\n                        <input type=\"text\" id =\"phoneNumber\" required  onChange={this.handleChange}/>\n                    </div>\n                   \n                    {/* Password */}\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\" className=\"black-text\">Password : </label>\n                        <input type=\"password\" id =\"password\"  required onChange={this.handleChange}/>\n                    </div>\n                    \n                    {/* transcation Id */}\n                    <div className=\"input-field\">\n                        <label htmlFor=\"transactionId\" class=\"black-text\" >Transaction Id : </label>\n                        <input type=\"text\" id =\"transactionId\" required onChange={this.handleChange}/>\n                    </div>\n\n                    {/* Subscription Plan */}\n                    <div className=\"input-field\">\n                        <select className=\"browser-default\" defaultValue={this.state.subscriptionPlan} required id=\"subscriptionPlan\" onChange={this.handleChange}>\n                                <option value=\"\" disabled  selected>Subscription Plan</option>\n                                {/* {\n                                    this.state.plans.map((item)=>\n                                   \n                                        <option value={item.categoryNameEng}>{item.categoryNameEng}  ||  {item.categoryNameUrdu}</option>\n                                    )\n                                } */}\n                                <option value=\"1\">1 Month</option>\n                                <option value=\"3\">3 Months</option>\n                                <option value=\"6\">6 Months</option>\n                                <option value=\"12\">12 Months</option>\n                                \n                            </select> \n                    </div>\n                    \n                    {/* Signup button */}\n                    <div className=\"input-field\">\n                        <button className=\"btn teal accent-4 z-depth-0 \">SIGNUP</button>\n                    </div>\n\n\n                </form>\n\n\n                {/* Recent Posts and recent comments */}\n                {/* <RecentPosts />\n                <RecentPosts /> */}\n                </div>\n\n               \n            </div>\n        )\n    }\n}\n\nexport default SignUp","F:\\REACT\\pak-commodities\\src\\components\\Posts\\RecentPosts.js",["154","155"],"\r\nexport const RecentPosts = () =>{\r\n\r\n    return(\r\n        <div className = \"pink col l5 push-l2\">\r\n\r\n            <span>Search bar</span>\r\n\r\n            <h5 className=\"grey-text center\">RECENT POSTS</h5>\r\n            \r\n            <ul>\r\n                <li><a href=\"\">Red chilli Latest Price</a></li>\r\n                <li><a href=\"\">Sesame ssed latest price </a></li>         \r\n            </ul>\r\n\r\n        </div>\r\n    )\r\n\r\n}","F:\\REACT\\pak-commodities\\src\\components\\Dashboard\\Dashboard.js",["156","157","158","159","160","161","162","163"],"import {Component} from 'react';\nimport './Dashboard.css';\nimport {Link} from 'react-router-dom';\nimport Sidebar from '../Layout/Sidebar/Sidebar';\nimport AddRate from './AddRate';\nimport {getAllRates, getCategoryRates} from '../../services/rates.service';\nimport {getAllCategories} from '../../services/category.service';\n\n\nclass Dashboard extends Component{\n    \n    state={\n\n        allCategories :[],\n        tableData : [],\n        openEditDialog: false,\n        openDeleteDialog: false,\n        openDescriptionDialog: false,\n        openHideDialog: false,\n        selectedItem: '',\n        selectedIndex: null,\n        date : ''  \n    }\n\n    componentDidMount = ()=>{\n        //set current date\n        var today = new Date();\n        var month;\n        if((today.getMonth()+1) < 10) {\n            month = \"0\"+(today.getMonth() + 1);\n        } else {\n            month = today.getMonth() + 1;\n        }\n        var dateString = today.getFullYear() + \"-\" + month + \"-\" + today.getDate()\n        console.log(\"date string : \", dateString)\n        this.setState({\n            date: dateString\n        })\n        ///* API call to fetch table data : by default for imports */\n        // this.setState({\n        //     tableData : [\n        //                     {item : 'Pulses', location : 'bahrain', description : 'hello world', date : '2021-01-27', rate : '100', percent: '10' },\n        //                     {item : 'Pulses', location : 'bahrain', description : 'hello world', date : '2021-01-27', rate : '100', percent: '10' }\n        //                 ]\n        // })\n        this.getAllCategories();\n        this.showTable('600bfa284a2a7a0960a9d556'); //category : import \n\n    } \n\n    /* Fetch All categories */\n    getAllCategories = async() =>{\n\n        const requestOptions = {\n                method: 'GET',\n                headers: { 'Content-Type': 'application/json' },\n            };\n        const response = await getAllCategories(requestOptions);\n        const res = await response.json();\n        console.log(\"Response \", res);\n        \n            var categories = [];\n            for(let item of res){\n                    categories.push(item)\n                }\n\n                this.setState({ \n                    allCategories: categories, \n                     \n                 });\n\n    }\n\n\n    // UPDATE THIS : Instead of all rates fetch the filtered rates, still to be done on backend\n    showTable = async (categoryId) =>{\n      \n        console.log(\"Table of this anchor needs to be rendered : \",categoryId)\n        /* API call for table data on click of tabs */\n        // fetch the rates of the clicked category from dB\n        const requestOptions = {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' },\n        };\n        const response = await getCategoryRates(requestOptions, categoryId);\n        const res = await response.json();\n        console.log(\"Response \", res);\n    \n       \n            var rates = [];\n            for(let item of res){\n                 rates.push(item)\n            }\n\n            this.setState({ \n                    tableData: rates, \n                        \n            });\n\n    }\n\n    openDialog = (action, index) => {\n        this.setState({\n            selectedItem: this.state.tableData[index],\n            selectedIndex: index\n        })\n        if(action === 'edit') {\n            this.setState({\n                openEditDialog: true\n            })\n        } else if(action === 'delete') {\n            this.setState({\n                openDeleteDialog: true\n            })\n        } else if(action === 'description') {\n            this.setState({\n                openDescriptionDialog: true\n            })\n        } else if(action === 'hideIcon') {\n            this.setState({\n                openHideDialog: true\n            })\n        }\n    }\n\n    closeDialog = (action) => {\n        if(action === 'edit') {\n            this.setState({\n                openEditDialog: false\n            })\n        } else if(action === 'delete') {\n            this.setState({\n                openDeleteDialog: false\n            })\n        } else if(action === 'description') {\n            this.setState({\n                openDescriptionDialog: false\n            })\n        } else if(action === 'hideIcon') {\n            this.setState({\n                openHideDialog: false\n            })\n        }\n    }\n\n    edit = () => {\n        var index = this.state.selectedIndex;\n        console.log(\"Index from edit : \", this.state.tableData[index]);\n    \n    }\n\n    delete =(index)=>{\n        console.log(\"Index from delete : \", index)\n\n    }\n\n    description =(index)=>{\n        console.log(\"Index from description : \", index)\n\n    }\n\n    hideIcon =(index)=>{\n        console.log(\"Index from hideIcon : \", index)\n\n    }\n\n    render(){\n        return(\n           \n            <div className=\"row\">\n                <div className=\"sidebar col l2\">\n                    <Sidebar />\n                </div>\n   \n                <br />\n                {/* category Tabs for viewing table */}\n                <div className=\"col l10\">\n                        <ul className=\"tabs\">\n                        {this.state.allCategories.map((item) =>\n                                 <li className=\"tab\"><a href=\"#\" onClick = {()=>this.showTable(item._id)}>{item.categoryNameEng}</a></li>                               \n                        )} \n\n                            {/* <li className=\"tab\"><a href=\"#\" onClick = {()=>this.showTable(\"imports\")}>IMPORT</a></li>\n                            <li className=\"tab\"><a href=\"#\" onClick = {()=>this.showTable(\"pulses\")}>PULSES</a></li>\n                            <li className=\"tab\"><a href=\"#\" onClick = {()=>this.showTable(\"grains\")}>GRAINS</a></li>\n                            <li className=\"tab\"><a href=\"#\" onClick = {()=>this.showTable(\"sugar\")}>SUGAR</a></li>\n                            <li className=\"tab\"><a href=\"#\" onClick = {()=>this.showTable(\"fodderseeds\")}>FODDER SEEDS</a></li>\n                            <li className=\"tab\"><a href=\"#\" onClick = {()=>this.showTable(\"oilseeds\")}>OIL SEEDS</a></li>\n                            <li className=\"tab\"><a href=\"#\" onClick = {()=>this.showTable(\"spices\")}>SPICES</a></li>\n                            <li className=\"tab\"><a href=\"#\" onClick = {()=>this.showTable(\"guar\")}>GUAR</a></li> */}\n                            \n                        </ul>\n\n                        <div className=\" container col s12\">\n                            <table>\n                                <thead>\n                                <tr>\n                                    <th>ITEM</th>\n                                    <th>LOCATION</th>\n                                    <th>DESCRIPTION</th>\n                                    <th>DATE</th>\n                                    <th>RATE</th>\n                                    <th>%</th>\n                                    <th>ACTIONS</th>\n                                </tr>\n                                </thead>\n\n                                <tbody>\n                                    { this.state.tableData.map((item,index) =>\n                                        <tr key={index}>\n                                            <td>{item.product.productNameEng}</td>\n                                            <td>{item.location.locationNameEng}</td>\n                                            <td>{item.descriptionEng}</td>\n                                            <td>{item.date}</td>\n                                            <td>{item.rate}</td>\n                                            <td>{item.percentage}</td>\n                                            <td><i class=\"material-icons\"><a className=\"edit\" href=\"#\" onClick = {() => this.openDialog('edit', index)}>create</a></i>\n                                                <i class=\"material-icons\"><a className=\"delete\" href=\"#\" onClick = {() => this.openDialog('delete', index)}>delete</a></i>\n                                                <i class=\"material-icons\"><a className=\"description\" href=\"#\" onClick = {() => this.openDialog('description', index)}>description</a></i>\n                                                <i class=\"material-icons\"><a className=\"hideicon\" href=\"#\" onClick = {() => this.openDialog('hideIcon', index)}>visibility_off</a></i>\n                                            </td>\n                                        </tr>                                \n                                    )}                                \n                                </tbody>\n                            </table>\n                        </div>\n                </div>\n\n                { this.state.openEditDialog ? \n                <div>\n                    <div id=\"modal1\" className=\"modal\">    \n                        <form onSubmit={this.edit()} className=\"form-edit modal-content\">\n                            <h5 className=\"grey-text text-darken-3 center\"><b>Edit Item</b></h5>\n\n                            {/* Select the category of product */}\n                            <div className=\"input-field\">\n                                {/* <label htmlFor=\"category\" className=\"black-text\"></label> */}\n                                <select className=\"browser-default\" defaultValue={this.state.selectedItem.product.productNameEng} onChange={this.handleChange}>\n                                    <option value=\"pulses\">Pulses</option>\n                                    <option value=\"kabuliChickPeas\">kabuli Chick Peas</option>\n                                </select>                           \n                            </div>\n\n                            {/* Select Location */}\n                            <div className=\"input-field\">\n                                {/* <label htmlFor=\"category\" className=\"black-text\"></label> */}\n                                <select className=\"browser-default\" defaultValue={this.state.selectedItem.location.locationNameEng} onChange={this.handleChange}>\n                                    <option value=\"pakistan\">Pakistan</option>\n                                    <option value=\"bahrain\">Bahrain</option>\n                                </select>                           \n                            </div>\n\n                            {/* Add rate */}\n                            <label htmlFor=\"rate\" className=\"black-text\">Rate : </label>\n                            <div className=\"input-field\">                                  \n                                <input type=\"number\" id =\"rate\" value={this.state.selectedItem.rate} onChange={this.handleChange}/>\n                            </div>\n\n                            {/* Add description*/}\n                            <label htmlFor=\"description\" className=\"black-text\">Description: </label>\n                            <div className=\"input-field\">\n                                <input type=\"text\" id =\"description\" value={this.state.selectedItem.descriptionEng} onChange={this.handleChange}/>\n                            </div>\n\n                            {/* Date */}\n                            <label htmlFor=\"date\" className=\"black-text\">Date : </label>\n                            <div className=\"input-field\">\n\n                                <input type=\"date\" id =\"date\" defaultValue={this.state.date} disabled/>\n                            </div>\n\n                            {/*Add button */}\n                            <div className=\"input-field right\">\n                                <button className=\"btn grey darken-2 z-depth-0 editbtn\" onClick={()=>this.closeDialog('edit')}>CANCEL</button>\n                                <button className=\"btn teal accent-4 z-depth-0 editbtn\">UPDATE</button>\n                            </div>                            \n                        </form>\n                       \n                    </div> <div class=\"modal-overlay\"></div> \n                    </div> : <div></div>\n                }                         \n            </div>   \n        )\n    }\n}\n\nexport default Dashboard","F:\\REACT\\pak-commodities\\src\\components\\Layout\\Sidebar\\Sidebar.js",[],"F:\\REACT\\pak-commodities\\src\\components\\Dashboard\\AddLocation.js",["164","165","166"],"import {Component} from 'react';\nimport Sidebar from '../Layout/Sidebar/Sidebar';\nimport './Dashboard.css';\nimport {addLocation, getAllLocations, deleteLocation} from '../../services/location.service';\n\nclass AddLocation extends Component{\n\n    state={\n\n        locationType : '',\n        locationName :'',\n        locationNameUrdu : '' ,\n        allLocations :[]       \n\n    }\n\n    componentDidMount =()=>{\n        this.getAllLocations();\n    }\n\n    handleChange =(e)=>{\n       // console.log(e.target.value);\n        this.setState({\n            [e.target.id] : e.target.value\n        });\n    }\n\n     /* Fetch All locations from dB */\n    getAllLocations = async() =>{\n\n        const requestOptions = {\n                method: 'GET',\n                headers: { 'Content-Type': 'application/json' },\n            };\n        const response = await getAllLocations(requestOptions);\n        const res = await response.json();\n        console.log(\"Response \", res);\n        \n       // if(res.status === 'success') {\n            var locations = [];\n            for(let item of res){\n                    locations.push(item)\n                }\n\n                this.setState({ \n                    allLocations: locations, \n                     \n                 });\n           // }\n    \n            \n    }\n\n   /* Add locationto dB */\n    addLocationItem = async (e) =>{\n    e.preventDefault();\n\n    var addThisLocation = {\n        locationNameEng : this.state.locationName,\n        locationNameUrdu : this.state.locationNameUrdu,\n        type : this.state.locationType\n    }\n\n    //saving data in mongo\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json',\n                    'Accept': 'application/json' },\n        body: JSON.stringify(addThisLocation)\n    };\n    const response = await addLocation(requestOptions);\n    const res = await response.json();\n    console.log(\"response after addLocation\", res)\n\n    \n    \n    }\n    \n    /* Delete location from dB */\n    deleteLocation = async(id)=>{\n        \n         const requestOptions = {\n            method: 'DELETE'       \n        };\n        const response = await deleteLocation(requestOptions,id);\n        const data = await response.json();\n    }\n\n    render(){\n        return(\n           \n            <div className=\"row\">\n                <div className=\"sidebar col l2\">\n                    <Sidebar />\n                </div>\n\n                 {/* list of all locations */}\n                 <div className=\"col l4\">\n                <table>\n                                <thead>\n                                <tr>\n                                    <th>LOCATION TYPE</th>\n                                    <th>LOCATION</th>\n                                    <th>URDU</th>\n                                    <th>ACTIONS</th>\n                                </tr>\n                                </thead>\n\n                                <tbody>\n                                    { this.state.allLocations.map((item) =>\n                                        <tr key={item._id}>\n                                            <td>{item.type}</td>\n                                            <td>{item.locationNameEng}</td>\n                                            <td>{item.locationNameUrdu}</td>\n                                            <td><i class=\"material-icons\"><a className=\"edit\" href=\"#\" onClick = {() => this.openDialog('edit', item._id)}>create</a></i>\n                                                <i class=\"material-icons\"><a className=\"delete\" href=\"#\" onClick = {() => this.deleteLocation(item._id)}>delete</a></i>\n                                            </td>\n                                        </tr>                                \n                                    )}                                \n                                </tbody>\n                            </table>\n                </div>\n\n                {/* form to add Location */}\n                <div className=\"col l6\">\n                    <form onSubmit={this.addLocationItem} className=\"grey lighten-1 col l8 offset-l1 s12 addLocationForm\">\n                        <h5 className=\"grey-text text-darken-3 center\"><b>ADD LOCATION</b></h5>\n\n                         {/* Select Location */}\n                        <div className=\"input-field\">\n                            {/* <label htmlFor=\"category\" className=\"black-text\"></label> */}\n                            <select className=\"browser-default\" defaultValue={this.state.locationType} id=\"locationType\" onChange={this.handleChange}>\n                                <option value=\"\" disabled selected>Location Type</option>\n                                <option value=\"Local\">Local</option>\n                                <option value=\"International\">International</option>\n                            </select>                           \n                        </div>\n\n                         {/* Location Name in english */}\n                        <div className=\"input-field\">\n                            <label htmlFor=\"locationName\" className=\"black-text\">Location Name : </label>\n                            <input type=\"text\" id =\"locationName\" onChange={this.handleChange}/>\n                        </div>\n\n                         {/* Location Name in Urdu */}\n                        <div className=\"input-field\">\n                            <label htmlFor=\"locationNameUrdu\" className=\"black-text\">Location Name In Urdu: </label>\n                            <input type=\"text\" id =\"locationNameUrdu\" onChange={this.handleChange}/>\n                        </div>\n\n                         {/* Add button */}\n                        <div className=\"input-field\">\n                            <button className=\"btn teal accent-4 z-depth-0 center\">ADD</button>\n                        </div>\n\n                    </form>\n                </div>\n            </div>\n        )}\n}\n\nexport default AddLocation","F:\\REACT\\pak-commodities\\src\\components\\Dashboard\\AddRate.js",[],"F:\\REACT\\pak-commodities\\src\\components\\Dashboard\\AddBlog.js",[],"F:\\REACT\\pak-commodities\\src\\components\\Home\\HistoricalRates.js",[],"F:\\REACT\\pak-commodities\\src\\services\\location.service.js",[],"F:\\REACT\\pak-commodities\\src\\components\\Dashboard\\AddProduct.js",["167","168","169","170"],"import {Component} from 'react';\nimport Sidebar from '../Layout/Sidebar/Sidebar';\nimport './Dashboard.css';\nimport {getAllCategories}from '../../services/category.service';\nimport {getAllProducts, addProduct,deleteProduct}from '../../services/product.service';\n\nclass AddProduct extends Component{ \n    state={\n\n        productCategory :'',\n        productName :'',\n        productNameUrdu : '' ,\n        allProducts :[] ,\n        categories : []    \n\n    }\n\n\n    componentDidMount =()=>{\n        this.getAllCategories();\n        this.getAllProducts();\n\n    }\n\n    /* Fetch All categories */\n    getAllCategories = async() =>{\n\n        const requestOptions = {\n                method: 'GET',\n                headers: { 'Content-Type': 'application/json' },\n            };\n        const response = await getAllCategories(requestOptions);\n        const res = await response.json();\n        console.log(\"Response \", res);\n        \n       // if(res.status === 'success') {\n            var categories = [];\n            for(let item of res){\n                    categories.push(item)\n                }\n\n                this.setState({ \n                    categories: categories, \n                     \n                 });\n           // }\n    \n            \n    }\n\n    /* Fetch All Products */\n    getAllProducts = async() =>{\n\n        const requestOptions = {\n                method: 'GET',\n                headers: { 'Content-Type': 'application/json' },\n            };\n        const response = await getAllProducts(requestOptions);\n        const res = await response.json();\n        console.log(\"Response \", res);\n        \n       // if(res.status === 'success') {\n            var Products = [];\n            for(let item of res){\n                    Products.push(item)\n                }\n\n                this.setState({ \n                    allProducts: Products, \n                     \n                 });\n           // }\n    \n            \n    }\n\n\n    handleChange =(e)=>{\n      //  console.log(e.target.value);\n        this.setState({\n            [e.target.id] : e.target.value\n        });\n    }\n\n    /* Add Product */\n    addProduct =async(e)=>{\n\n        e.preventDefault();\n        console.log('Product cat : ', this.state.productCategory);\n\n        var saveProductCategory = {};\n        for(let i = 0; i < this.state.categories.length; i++){ \n            // console.log(this.state.categories[i]);\n            if(this.state.categories[i].categoryNameEng === this.state.productCategory){\n                saveProductCategory = this.state.categories[i];\n                // console.log(\"save Product catgeory\", saveProductCategory)\n            }\n        }\n\n\n        var addThisProduct = {\n           productNameEng : this.state.productName,\n           productNameUrdu : this.state.productNameUrdu,\n           productCategory : saveProductCategory\n        }\n    \n        //saving data in mongo\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json',\n                        'Accept': 'application/json' },\n            body: JSON.stringify(addThisProduct)\n        };\n        const response = await addProduct(requestOptions);\n        // const res = await response.json();\n        // console.log(\"response after addProduct\", res)\n\n        \n    }\n\n    /* Delete product */\n    deleteProduct = async(id)=>{\n        \n        const requestOptions = {\n           method: 'DELETE'       \n       };\n       const response = await deleteProduct(requestOptions,id);\n       const data = await response.json();\n   }\n\n\n    render(){\n        return(\n           \n            <div className=\"row\">\n                <div className=\"sidebar col l2\">\n                    <Sidebar />\n                </div>\n                {/* List of all Products */}\n                <div className=\"col l4\">\n                <table>\n                                <thead>\n                                <tr>\n                                    <th>CATEGORY</th>\n                                    <th>PRODUCT</th>\n                                    <th>URDU</th>\n                                    <th>ACTIONS</th>\n                                </tr>\n                                </thead>\n\n                                <tbody>\n                                    { this.state.allProducts.map((item) =>\n                                        <tr key={item._id}>\n                                            <td>CATEGORY</td>\n                                            <td>{item.productNameEng}</td>\n                                            <td>{item.productNameUrdu}</td>\n                                            <td><i class=\"material-icons\"><a className=\"edit\" href=\"#\" onClick = {() => this.openDialog('edit', item._id)}>create</a></i>\n                                                <i class=\"material-icons\"><a className=\"delete\" href=\"#\" onClick = {() => this.deleteProduct(item._id)}>delete</a></i>\n                                            </td>\n                                        </tr>                                \n                                    )}                                \n                                </tbody>\n                            </table>\n                </div>\n   \n                {/* Add a product form */}\n                <div className=\"col l6\">\n                    <form onSubmit={this.addProduct} className=\"grey lighten-1 col l8 offset-l1 s12 addItemForm\">\n                        <h5 className=\"grey-text text-darken-3 center\"><b>ADD A PRODUCT</b></h5>\n\n                        {/* Select a catgeory */}\n                        <div className=\"input-field\">\n                            {/* <label htmlFor=\"category\" className=\"black-text\"></label> */}\n                            <select className=\"browser-default\" defaultValue={this.state.productCategory} id =\"productCategory\" onChange={this.handleChange}>\n                                <option value=\"\" disabled selected>Category</option>\n                                {\n                                    this.state.categories.map((item)=>\n                                   \n                                        <option value={item.categoryNameEng}>{item.categoryNameEng}  ||  {item.categoryNameUrdu}</option>\n                                    )\n                                }\n\n\n                                {/* <option value=\"pulses\">Pulses</option>\n                                <option value=\"sugar\">Sugar</option>\n                                <option value=\"grains\">Grains</option>\n                                <option value=\"fodderSeeds\">Fodder Seeds</option>\n                                <option value=\"oilSeeds\">Oil Seeds</option>\n                                <option value=\"guar\">Guar</option>\n                                <option value=\"spices\">Spices</option> */}\n                            </select>                           \n                        </div>\n\n                         {/* Item name in english*/}\n                        <div className=\"input-field\">\n                            <label htmlFor=\"productName\" className=\"black-text\">Product Name : </label>\n                            <input type=\"text\" id =\"productName\" onChange={this.handleChange}/>\n                        </div>\n\n                         {/* product name in urdu */}\n                        <div className=\"input-field\">\n                            <label htmlFor=\"productNameUrdu\" className=\"black-text\">Product Name In Urdu: </label>\n                            <input type=\"text\" id =\"productNameUrdu\" onChange={this.handleChange}/>\n                        </div>\n                        \n                         {/* Add button */}\n                        <div className=\"input-field\">\n                            <button className=\"btn teal accent-4 z-depth-0 center\">ADD</button>\n                        </div>\n\n                    </form>\n                </div>\n            </div>\n        )}\n}\n\nexport default AddProduct","F:\\REACT\\pak-commodities\\src\\components\\Dashboard\\AddCategory.js",["171","172","173"],"import {Component} from 'react';\r\nimport Sidebar from '../Layout/Sidebar/Sidebar';\r\nimport './Dashboard.css';\r\nimport {addCategory, getAllCategories, deleteCategory}from '../../services/category.service';\r\n\r\nclass AddCategory extends Component{ \r\n    \r\n    state={\r\n\r\n        categoryName :'',\r\n        categoryNameUrdu : '' ,\r\n        allCategories : []      \r\n\r\n    }\r\n\r\n    componentDidMount=()=>{\r\n        this.getAllCategories();\r\n    }\r\n\r\n    handleChange =(e)=>{\r\n        //console.log(e.target.value);\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        });\r\n    }\r\n\r\n    /* Fetch All categories */\r\n    getAllCategories = async() =>{\r\n\r\n        const requestOptions = {\r\n                method: 'GET',\r\n                headers: { 'Content-Type': 'application/json' },\r\n            };\r\n        const response = await getAllCategories(requestOptions);\r\n        const res = await response.json();\r\n        console.log(\"Response \", res);\r\n        \r\n       // if(res.status === 'success') {\r\n            var categories = [];\r\n            for(let item of res){\r\n                    categories.push(item)\r\n                }\r\n\r\n                this.setState({ \r\n                    allCategories: categories, \r\n                     \r\n                 });\r\n           // }\r\n    \r\n            \r\n    }\r\n\r\n    /* Add category */\r\n    addCategoryItem = async(e)=>{\r\n        e.preventDefault();\r\n\r\n        var addThisCategory = {\r\n            categoryNameEng : this.state.categoryName,\r\n            categoryNameUrdu : this.state.categoryNameUrdu,\r\n        }\r\n    \r\n        //saving data in mongo\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json',\r\n                        'Accept': 'application/json' },\r\n            body: JSON.stringify(addThisCategory)\r\n        };\r\n        const response = await addCategory(requestOptions);\r\n        const res = await response.json();\r\n        console.log(\"response after addCategory\", res)\r\n\r\n        // after success set the values to null of the form\r\n\r\n        \r\n    }\r\n\r\n    /* Delete category */\r\n    deleteCategory = async(id)=>{\r\n        console.log(\"catgeiory items id :: \",id)\r\n         \r\n         const requestOptions = {\r\n            method: 'DELETE'\r\n            // headers: { 'Content-Type': 'application/json' } \r\n        };\r\n        const response = await deleteCategory(requestOptions,id);\r\n        const data = await response.json();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n           \r\n            <div className=\"row\">\r\n                <div className=\"sidebar col l2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                {/* list of all catgeories */}\r\n                <div className=\"col l4\">\r\n                <table>\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>CATEGORY</th>\r\n                                    <th>URDU</th>\r\n                                    <th>ACTIONS</th>\r\n                                </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    { this.state.allCategories.map((item,index) =>\r\n                                        <tr key={item._id}>\r\n                                            <td>{item.categoryNameEng}</td>\r\n                                            <td>{item.categoryNameUrdu}</td>\r\n                                            <td><i class=\"material-icons\"><a className=\"edit\" href=\"#\" onClick = {() => this.openDialog('edit', item._id)}>create</a></i>\r\n                                                <i class=\"material-icons\"><a className=\"delete\" href=\"#\" onClick = {() => this.deleteCategory(item._id)}>delete</a></i>\r\n                                            </td>\r\n                                        </tr>                                \r\n                                    )}                                \r\n                                </tbody>\r\n                            </table>\r\n                </div>\r\n   \r\n                 {/* form to add new category */}\r\n                <div className=\"col l6 addCategory\">\r\n                    <form onSubmit={this.addCategoryItem} className=\"grey lighten-1 col l8 offset-l1 s12 addCategoryForm\">\r\n                        <h5 className=\"grey-text text-darken-3 center\"><b>ADD A CATEGORY</b></h5>\r\n\r\n\r\n                         {/* Category name in english*/}\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"categoryName\" className=\"black-text\">Category Name : </label>\r\n                            <input type=\"text\" id =\"categoryName\" onChange={this.handleChange}/>\r\n                        </div>\r\n\r\n                         {/* category name in urdu */}\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"categoryNameUrdu\" className=\"black-text\">Category Name In Urdu: </label>\r\n                            <input type=\"text\" id =\"categoryNameUrdu\" onChange={this.handleChange}/>\r\n                        </div>\r\n                        \r\n                         {/* Add button */}\r\n                        <div className=\"input-field\">\r\n                            <button className=\"btn teal accent-4 z-depth-0 center\">ADD</button>\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )}\r\n}\r\n\r\nexport default AddCategory","F:\\REACT\\pak-commodities\\src\\services\\category.service.js",[],"F:\\REACT\\pak-commodities\\src\\services\\product.service.js",[],"F:\\REACT\\pak-commodities\\src\\context\\ThemeContext.js",[],"F:\\REACT\\pak-commodities\\src\\services\\rates.service.js",["174"],"import AddRate from '../components/Dashboard/AddRate';\r\n\r\nvar config = require('../config.json');\r\nlet url = config.ipUrl; //server \r\n\r\nexport function getAllRates(data) {\r\n    return fetch( url + 'rates/allRates', data);\r\n}\r\n\r\nexport function getCategoryRates(data, categoryId) {\r\n    return fetch( url + 'rates/categoryRates/'+categoryId, data);\r\n}\r\n\r\nexport function getOldRates(data) {\r\n    return fetch( url + 'rates/getoldrates', data);\r\n}\r\n\r\nexport function addRate(data){\r\n    return fetch( url + 'rates/addRate', data);\r\n}","F:\\REACT\\pak-commodities\\src\\components\\Others\\TermsOfService.js",[],"F:\\REACT\\pak-commodities\\src\\components\\Others\\NewsRoom.js",[],"F:\\REACT\\pak-commodities\\src\\components\\Dashboard\\Users.js",["175","176","177","178","179","180","181","182","183","184","185"],"import {Component} from 'react';\r\nimport Sidebar from '../Layout/Sidebar/Sidebar';\r\nimport './Dashboard.css';\r\nimport {approveUser, getAllUsers, deleteUser, disableUser, getExpiredUsers, getPendingUsers, getActiveUsers}from '../../services/user.service';\r\n\r\nclass Users extends Component{ \r\n    state={\r\n\r\n        allUsers:[]      \r\n\r\n    }\r\n\r\n    componentDidMount=()=>{\r\n        this.showTable('all');\r\n    }\r\n\r\n    handleChange =(e)=>{\r\n        //console.log(e.target.value);\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        });\r\n    }\r\n\r\n     /* filter by status of user */\r\n    showTable = async(status)=>{\r\n\r\n        if(status === 'all'){\r\n            this.getAllUsers();\r\n\r\n        }else if(status === \"pending\"){\r\n            this.getPendingUsers();\r\n\r\n        }else if(status === \"expired\"){\r\n            this.getExpiredUsers();\r\n\r\n        }else if(status === \"active\"){\r\n            this.getActiveUsers();\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /* Fetch All Users */\r\n    getAllUsers = async() =>{\r\n\r\n        const requestOptions = {\r\n                method: 'GET',\r\n                headers: { 'Content-Type': 'application/json' },\r\n            };\r\n        const response = await getAllUsers(requestOptions);\r\n        const res = await response.json();\r\n        console.log(\"Response \", res);\r\n        \r\n            var users = [];\r\n            for(let item of res){\r\n                    users.push(item)\r\n                }\r\n\r\n                this.setState({ \r\n                    allUsers: users, \r\n                     \r\n                 });\r\n    \r\n            \r\n    }\r\n\r\n    /* Fetch pending Users */\r\n    getPendingUsers = async() =>{\r\n\r\n        const requestOptions = {\r\n                method: 'GET',\r\n                headers: { 'Content-Type': 'application/json' },\r\n            };\r\n        const response = await getPendingUsers(requestOptions);\r\n        const res = await response.json();\r\n        console.log(\"Response \", res);\r\n        \r\n            var users = [];\r\n            for(let item of res){\r\n                    users.push(item)\r\n                }\r\n\r\n                this.setState({ \r\n                    allUsers: users, \r\n                     \r\n                 });\r\n    \r\n            \r\n    }\r\n\r\n    /* Fetch Expired Users */\r\n    getExpiredUsers = async() =>{\r\n\r\n        const requestOptions = {\r\n                method: 'GET',\r\n                headers: { 'Content-Type': 'application/json' },\r\n            };\r\n        const response = await getExpiredUsers(requestOptions);\r\n        const res = await response.json();\r\n        console.log(\"Response \", res);\r\n        \r\n            var users = [];\r\n            for(let item of res){\r\n                    users.push(item)\r\n                }\r\n\r\n                this.setState({ \r\n                    allUsers: users, \r\n                     \r\n                 });\r\n    \r\n            \r\n    }\r\n    \r\n     /* Fetch Active Users */\r\n    getActiveUsers = async() =>{\r\n\r\n        const requestOptions = {\r\n                method: 'GET',\r\n                headers: { 'Content-Type': 'application/json' },\r\n            };\r\n        const response = await getActiveUsers(requestOptions);\r\n        const res = await response.json();\r\n        console.log(\"Response \", res);\r\n        \r\n            var users = [];\r\n            for(let item of res){\r\n                    users.push(item)\r\n                }\r\n\r\n                this.setState({ \r\n                    allUsers: users, \r\n                     \r\n                 });\r\n    \r\n            \r\n    }\r\n\r\n    /* Delete user */\r\n    deleteUser = async(id)=>{\r\n        console.log(\"Delete user id :: \",id)\r\n         \r\n         const requestOptions = {\r\n            method: 'DELETE'\r\n            // headers: { 'Content-Type': 'application/json' } \r\n        };\r\n        const response = await deleteUser(requestOptions,id);\r\n        const data = await response.json();\r\n    }\r\n\r\n    /* Approve user */\r\n    approveUser = async(id)=>{\r\n        console.log(\"Approve user id :: \",id)\r\n         \r\n         const requestOptions = {\r\n            method: 'PUT'\r\n        };\r\n        const response = await approveUser(requestOptions,id);\r\n        const data = await response.json();\r\n    }\r\n\r\n    /* Disable User */\r\n    disableUser = async(id)=>{\r\n        console.log(\"Disable user id :: \",id)\r\n         \r\n         const requestOptions = {\r\n            method: 'PUT'\r\n        };\r\n        const response = await disableUser(requestOptions,id);\r\n        const data = await response.json();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n           \r\n            <div className=\"row\">\r\n                <div className=\"sidebar col l2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <br />\r\n\r\n                {/* list of all users */}\r\n                <div className=\"col l10\">\r\n                        <ul className=\"tabs\">\r\n\r\n                            <li className=\"tab\" ><a href=\"#\" onClick = {()=>this.showTable(\"all\")}>All</a></li>\r\n                            <li className=\"tab\" ><a href=\"#\" onClick = {()=>this.showTable(\"pending\")}>PENDING</a></li>\r\n                            <li className=\"tab\" ><a href=\"#\" onClick = {()=>this.showTable(\"expired\")}>EXPIRED</a></li>\r\n                            <li className=\"tab\" ><a href=\"#\" onClick = {()=>this.showTable(\"active\")}>ACTIVE</a></li>\r\n\r\n                        </ul>\r\n                       \r\n                        <div className=\" container col s12\">\r\n                        <table>\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>NAME</th>\r\n                                    <th>EMAIL</th>\r\n                                    <th>PHONE</th>\r\n                                    <th>SUBSCRIPTION PLAN</th>\r\n                                    <th>DURATION</th>\r\n                                    <th>STATUS</th>\r\n                                    <th>ACTIONS</th>\r\n                                </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    { this.state.allUsers.map((item) =>\r\n                                        <tr key={item._id}>\r\n                                            <td>{item.name}</td>\r\n                                            <td>{item.email}</td>\r\n                                            <td>{item.phoneNumber}</td>\r\n                                            <td>{item.subscribedPlan.plan} Months </td>\r\n                                            <td>{item.startDate} - {item.endDate}</td>\r\n                                            <td>{item.status}</td>\r\n                                            <td><i className=\"material-icons\"><a className=\"edit\" href=\"#\" onClick = {() => this.openDialog('edit', item._id)}>create</a></i>\r\n                                                <i className=\"material-icons\"><a className=\"delete\" href=\"#\" onClick = {() => this.deleteCategory(item._id)}>delete</a></i>\r\n                                                {item.status === \"pending\" ? \r\n                                                    <i className=\"material-icons\"><a className=\"approve\" href=\"#\" onClick = {() => this.approveUser(item._id)}>verified_user</a></i> :\r\n                                                    <i className=\"material-icons\"><a className=\"disable_user\" href=\"#\" onClick = {() => this.disableUser(item._id)}>not_interested</a></i>\r\n                                                }\r\n                                                \r\n                                            </td>\r\n                                        </tr>                                \r\n                                    )}                                \r\n                                </tbody>\r\n                        </table>\r\n                        </div>\r\n                </div>\r\n   \r\n            </div>\r\n        )}\r\n}\r\n\r\nexport default Users","F:\\REACT\\pak-commodities\\src\\services\\user.service.js",[],"F:\\REACT\\pak-commodities\\src\\components\\Dashboard\\AddPlan.js",["186","187","188","189"],"import {Component} from 'react';\r\nimport Sidebar from '../Layout/Sidebar/Sidebar';\r\nimport './Dashboard.css';\r\nimport {addPlan, getAllPlans, deletePlan}from '../../services/plan.service';\r\n\r\nclass AddPlan extends Component{ \r\n    state={\r\n\r\n        planName :'',\r\n        planDuration : '',\r\n        planPricePKR : '',\r\n        planPriceUSD : '',\r\n        planDescription : '' ,\r\n        allPlans : []      \r\n\r\n    }\r\n\r\n    componentDidMount=()=>{\r\n        this.getAllPlans();\r\n    }\r\n\r\n    handleChange =(e)=>{\r\n        //console.log(e.target.value);\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        });\r\n    }\r\n\r\n     /* Fetch All Plans */\r\n     getAllPlans = async() =>{\r\n\r\n        const requestOptions = {\r\n                method: 'GET',\r\n                headers: { 'Content-Type': 'application/json' },\r\n            };\r\n        const response = await getAllPlans(requestOptions);\r\n        const res = await response.json();\r\n        console.log(\"Response \", res);\r\n        \r\n            var Plans = [];\r\n            for(let item of res){\r\n                    Plans.push(item)\r\n                }\r\n\r\n                this.setState({ \r\n                    allPlans: Plans, \r\n                     \r\n                 });\r\n        \r\n    \r\n            \r\n    }\r\n\r\n     /* Add Plan */\r\n     addPlanItem = async(e)=>{\r\n        e.preventDefault();\r\n\r\n        var addThisPlan = {\r\n            planName : this.state.planName,\r\n            planDuration : this.state.planDuration,\r\n            planPricePKR : this.state.planPricePKR,\r\n            planPriceUSD : this.state.planPriceUSD,\r\n            planDescription : this.state.planDescription ,\r\n        }\r\n    \r\n        //saving data in mongo\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json',\r\n                        'Accept': 'application/json' },\r\n            body: JSON.stringify(addThisPlan)\r\n        };\r\n        const response = await addPlan(requestOptions);\r\n        const res = await response.json();\r\n        console.log(\"response after addPlan\", res)\r\n\r\n        // after success set the values to null of the form\r\n\r\n        \r\n    }\r\n\r\n    /* Delete Plan */\r\n    deletePlan = async(id)=>{\r\n        console.log(\"plan items id :: \",id)\r\n         \r\n         const requestOptions = {\r\n            method: 'DELETE'\r\n        };\r\n        const response = await deletePlan(requestOptions,id);\r\n        const data = await response.json();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n           \r\n            <div className=\"row\">\r\n                <div className=\"sidebar col l2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                {/* list of all Plans */}\r\n                <div className=\"col l5\">\r\n                <table>\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>PLAN</th>\r\n                                    <th>DURATION</th>\r\n                                    <th>PRICE(PKR)</th>\r\n                                    <th>PRICE(USD)</th>\r\n                                    {/* <th>DESCRIPTION</th> */}\r\n                                    <th>ACTIONS</th>\r\n                                </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    { this.state.allPlans.map((item,index) =>\r\n                                        <tr key={item._id}>\r\n                                            <td>{item.planName}</td>\r\n                                            <td>{item.planDuration}</td>\r\n                                            <td>{item.planPricePKR}</td>\r\n                                            <td>{item.planPriceUSD}</td>\r\n                                            {/* <td>{item.planDescription}</td> */}\r\n                                            <td><i class=\"material-icons\"><a className=\"edit\" href=\"#\" onClick = {() => this.openDialog('edit', item._id)}>create</a></i>\r\n                                                <i class=\"material-icons\"><a className=\"description\" href=\"#\" onClick = {() => this.openDialog('description', item._id)}>description</a></i>\r\n                                                <i class=\"material-icons\"><a className=\"delete\" href=\"#\" onClick = {() => this.deletePlan(item._id)}>delete</a></i>          \r\n                                            </td>\r\n                                        </tr>                                \r\n                                    )}                                \r\n                                </tbody>\r\n                            </table>\r\n                </div>\r\n   \r\n                 {/* form to add new category */}\r\n                <div className=\"col l5 addCategory\">\r\n                    <form onSubmit={this.addPlanItem} className=\"grey lighten-1 col l9 offset-l1 s12 addCategoryForm\">\r\n                        <h5 className=\"grey-text text-darken-3 center\"><b>ADD A PLAN</b></h5>\r\n\r\n\r\n                         {/* Plan Name*/}\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"planName\" className=\"black-text\">Plan Name : </label>\r\n                            <input type=\"text\" id =\"planName\" onChange={this.handleChange}/>\r\n                        </div>\r\n\r\n                         {/* Plan Duration*/}\r\n                         <label htmlFor=\"planDuration\" className=\"black-text\">Plan Duration : </label>\r\n                         <div className=\"input-field\">\r\n                            <input type=\"Number\" id =\"planDuration\" onChange={this.handleChange}/>\r\n                        </div>\r\n\r\n                         {/* plan Price in PKR */}\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"planPricePKR\" className=\"black-text\">Price (PKR): </label>\r\n                            <input type=\"text\" id =\"planPricePKR\" onChange={this.handleChange}/>\r\n                        </div>\r\n\r\n                         {/* plan Price in USD */}\r\n                         <div className=\"input-field\">\r\n                            <label htmlFor=\"planPriceUSD\" className=\"black-text\">Price (USD): </label>\r\n                            <input type=\"text\" id =\"planPriceUSD\" onChange={this.handleChange}/>\r\n                        </div>\r\n\r\n                        {/* description */}\r\n                        <label htmlFor=\"planDescription\" className=\"black-text\">Plan Description : </label>\r\n                        <div className=\"input-field\">\r\n                            <textarea id =\"planDescription\" onChange={this.handleChange}/>\r\n                        </div>\r\n\r\n                        \r\n                         {/* Add button */}\r\n                        <div className=\"input-field\">\r\n                            <button className=\"btn teal accent-4 z-depth-0 center\">ADD</button>\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )}\r\n}\r\n\r\nexport default AddPlan","F:\\REACT\\pak-commodities\\src\\services\\plan.service.js",[],"F:\\REACT\\pak-commodities\\src\\components\\Dashboard\\Notifications.js",[],{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","severity":1,"message":"195","line":2,"column":8,"nodeType":"196","messageId":"197","endLine":2,"endColumn":14},{"ruleId":"194","severity":1,"message":"198","line":5,"column":18,"nodeType":"196","messageId":"197","endLine":5,"endColumn":22},{"ruleId":"194","severity":1,"message":"199","line":8,"column":10,"nodeType":"196","messageId":"197","endLine":8,"endColumn":21},{"ruleId":"200","severity":1,"message":"201","line":44,"column":53,"nodeType":"202","endLine":44,"endColumn":178},{"ruleId":"203","severity":1,"message":"204","line":26,"column":17,"nodeType":"202","endLine":26,"endColumn":21},{"ruleId":"205","severity":1,"message":"206","line":32,"column":17,"nodeType":"202","endLine":32,"endColumn":140},{"ruleId":"207","severity":1,"message":"208","line":32,"column":140,"nodeType":"202","endLine":32,"endColumn":180},{"ruleId":"205","severity":1,"message":"206","line":33,"column":17,"nodeType":"202","endLine":33,"endColumn":125},{"ruleId":"207","severity":1,"message":"208","line":33,"column":125,"nodeType":"202","endLine":33,"endColumn":164},{"ruleId":"205","severity":1,"message":"206","line":40,"column":17,"nodeType":"202","endLine":40,"endColumn":105},{"ruleId":"207","severity":1,"message":"208","line":40,"column":105,"nodeType":"202","endLine":40,"endColumn":150},{"ruleId":"205","severity":1,"message":"206","line":41,"column":17,"nodeType":"202","endLine":41,"endColumn":103},{"ruleId":"207","severity":1,"message":"208","line":41,"column":103,"nodeType":"202","endLine":41,"endColumn":147},{"ruleId":"194","severity":1,"message":"209","line":2,"column":8,"nodeType":"196","messageId":"197","endLine":2,"endColumn":14},{"ruleId":"194","severity":1,"message":"210","line":3,"column":8,"nodeType":"196","messageId":"197","endLine":3,"endColumn":14},{"ruleId":"194","severity":1,"message":"211","line":4,"column":8,"nodeType":"196","messageId":"197","endLine":4,"endColumn":14},{"ruleId":"194","severity":1,"message":"212","line":6,"column":9,"nodeType":"196","messageId":"197","endLine":6,"endColumn":20},{"ruleId":"200","severity":1,"message":"201","line":83,"column":54,"nodeType":"202","endLine":83,"endColumn":107},{"ruleId":"213","severity":1,"message":"214","line":20,"column":9,"nodeType":"215","messageId":"216","endLine":20,"endColumn":39},{"ruleId":"194","severity":1,"message":"217","line":3,"column":9,"nodeType":"196","messageId":"197","endLine":3,"endColumn":20},{"ruleId":"213","severity":1,"message":"214","line":37,"column":9,"nodeType":"215","messageId":"216","endLine":37,"endColumn":39},{"ruleId":"200","severity":1,"message":"201","line":12,"column":21,"nodeType":"202","endLine":12,"endColumn":32},{"ruleId":"200","severity":1,"message":"201","line":13,"column":21,"nodeType":"202","endLine":13,"endColumn":32},{"ruleId":"194","severity":1,"message":"198","line":3,"column":9,"nodeType":"196","messageId":"197","endLine":3,"endColumn":13},{"ruleId":"194","severity":1,"message":"218","line":5,"column":8,"nodeType":"196","messageId":"197","endLine":5,"endColumn":15},{"ruleId":"194","severity":1,"message":"212","line":6,"column":9,"nodeType":"196","messageId":"197","endLine":6,"endColumn":20},{"ruleId":"200","severity":1,"message":"201","line":180,"column":54,"nodeType":"202","endLine":180,"endColumn":107},{"ruleId":"200","severity":1,"message":"201","line":217,"column":75,"nodeType":"202","endLine":217,"endColumn":153},{"ruleId":"200","severity":1,"message":"201","line":218,"column":75,"nodeType":"202","endLine":218,"endColumn":157},{"ruleId":"200","severity":1,"message":"201","line":219,"column":75,"nodeType":"202","endLine":219,"endColumn":167},{"ruleId":"200","severity":1,"message":"201","line":220,"column":75,"nodeType":"202","endLine":220,"endColumn":161},{"ruleId":"194","severity":1,"message":"219","line":86,"column":15,"nodeType":"196","messageId":"197","endLine":86,"endColumn":19},{"ruleId":"200","severity":1,"message":"201","line":115,"column":75,"nodeType":"202","endLine":115,"endColumn":156},{"ruleId":"200","severity":1,"message":"201","line":116,"column":75,"nodeType":"202","endLine":116,"endColumn":154},{"ruleId":"194","severity":1,"message":"220","line":114,"column":15,"nodeType":"196","messageId":"197","endLine":114,"endColumn":23},{"ruleId":"194","severity":1,"message":"219","line":128,"column":14,"nodeType":"196","messageId":"197","endLine":128,"endColumn":18},{"ruleId":"200","severity":1,"message":"201","line":157,"column":75,"nodeType":"202","endLine":157,"endColumn":156},{"ruleId":"200","severity":1,"message":"201","line":158,"column":75,"nodeType":"202","endLine":158,"endColumn":153},{"ruleId":"194","severity":1,"message":"219","line":87,"column":15,"nodeType":"196","messageId":"197","endLine":87,"endColumn":19},{"ruleId":"200","severity":1,"message":"201","line":114,"column":75,"nodeType":"202","endLine":114,"endColumn":156},{"ruleId":"200","severity":1,"message":"201","line":115,"column":75,"nodeType":"202","endLine":115,"endColumn":154},{"ruleId":"194","severity":1,"message":"218","line":1,"column":8,"nodeType":"196","messageId":"197","endLine":1,"endColumn":15},{"ruleId":"194","severity":1,"message":"219","line":148,"column":15,"nodeType":"196","messageId":"197","endLine":148,"endColumn":19},{"ruleId":"194","severity":1,"message":"219","line":159,"column":15,"nodeType":"196","messageId":"197","endLine":159,"endColumn":19},{"ruleId":"194","severity":1,"message":"219","line":170,"column":15,"nodeType":"196","messageId":"197","endLine":170,"endColumn":19},{"ruleId":"200","severity":1,"message":"201","line":187,"column":50,"nodeType":"202","endLine":187,"endColumn":100},{"ruleId":"200","severity":1,"message":"201","line":188,"column":50,"nodeType":"202","endLine":188,"endColumn":104},{"ruleId":"200","severity":1,"message":"201","line":189,"column":50,"nodeType":"202","endLine":189,"endColumn":104},{"ruleId":"200","severity":1,"message":"201","line":190,"column":50,"nodeType":"202","endLine":190,"endColumn":103},{"ruleId":"200","severity":1,"message":"201","line":217,"column":79,"nodeType":"202","endLine":217,"endColumn":160},{"ruleId":"200","severity":1,"message":"201","line":218,"column":79,"nodeType":"202","endLine":218,"endColumn":158},{"ruleId":"200","severity":1,"message":"201","line":220,"column":83,"nodeType":"202","endLine":220,"endColumn":160},{"ruleId":"200","severity":1,"message":"201","line":221,"column":83,"nodeType":"202","endLine":221,"endColumn":165},{"ruleId":"194","severity":1,"message":"219","line":90,"column":15,"nodeType":"196","messageId":"197","endLine":90,"endColumn":19},{"ruleId":"200","severity":1,"message":"201","line":123,"column":75,"nodeType":"202","endLine":123,"endColumn":156},{"ruleId":"200","severity":1,"message":"201","line":124,"column":75,"nodeType":"202","endLine":124,"endColumn":170},{"ruleId":"200","severity":1,"message":"201","line":125,"column":75,"nodeType":"202","endLine":125,"endColumn":150},"no-native-reassign",["221"],"no-negated-in-lhs",["222"],"no-unused-vars","'logopc' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'toggleTheme' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'pulses' is defined but never used.","'spices' is defined but never used.","'grains' is defined but never used.","'getAllRates' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'RecentPosts' is defined but never used.","'AddRate' is defined but never used.","'data' is assigned a value but never used.","'response' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]